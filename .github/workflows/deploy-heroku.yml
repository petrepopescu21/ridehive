name: Deploy to Heroku

on:
  push:
    branches: [main]
  workflow_dispatch: # Allow manual triggers

env:
  NODE_VERSION: '18'
  HEROKU_APP_NAME: ${{ secrets.HEROKU_APP_NAME }}

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Build web client
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: |
            web-client/dist/
            server/
          retention-days: 1

  deploy:
    name: Deploy to Heroku
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
      
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh

      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.13.15
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          usedocker: false
          
      - name: Setup Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh
          echo ${{ secrets.HEROKU_API_KEY }} | heroku auth:token
          
      - name: Run database migrations
        run: |
          heroku run 'cd server && node -e "
            const { query } = require(\"./db/database\");
            const fs = require(\"fs\");
            if (fs.existsSync(\"./db/migrations/001_add_dual_pins.sql\")) {
              const sql = fs.readFileSync(\"./db/migrations/001_add_dual_pins.sql\", \"utf8\");
              query(sql).then(() => console.log(\"Migration complete\")).catch(console.error);
            } else {
              console.log(\"No migration file found\");
            }
          "' --app ${{ env.HEROKU_APP_NAME }}
        env:
          HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }}
        
      - name: Health check
        run: |
          sleep 30 # Wait for deployment to complete
          curl -f https://${{ env.HEROKU_APP_NAME }}.herokuapp.com/health || exit 1

      - name: Deployment notification
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "✅ Deployment successful! App available at: https://${{ env.HEROKU_APP_NAME }}.herokuapp.com"
          else
            echo "❌ Deployment failed!"
          fi