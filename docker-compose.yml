version: '3.8'

# Production services - all containerized
services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: ridehive-postgres
    environment:
      POSTGRES_DB: ridehive
      POSTGRES_USER: ridehive
      POSTGRES_PASSWORD: ridehive123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ridehive -d ridehive"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ridehive-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: ridehive-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - ridehive-network

  # RideHive Server (Production)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: ridehive-server
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: ridehive
      DB_USER: ridehive
      DB_PASSWORD: ridehive123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      SESSION_SECRET: dev-secret-change-in-production
      ORGANIZER_PASSWORD: admin123
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ridehive-network
    restart: unless-stopped

  # RideHive Web Client (Production)
  web-client:
    build:
      context: ./web-client
      dockerfile: Dockerfile
    container_name: ridehive-web-client
    ports:
      - "3000:3000"
    depends_on:
      - server
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - ridehive-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  ridehive-network:
    driver: bridge